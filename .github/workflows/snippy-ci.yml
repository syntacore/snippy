name: Snippy pre-commit and post-push
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  main:
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash
    env:
      BUILD_DIR: "release/build"
      INSTALL_DIR: "release/install"
    steps:
      - name: Install required compiler to be sure
        run: sudo apt-get update && sudo apt-get install -y clang-14 ninja-build ccache lld cmake && pip install sphinx myst-parser
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            .syntacore
            cmake
            libunwind
            lld
            llvm
            third-party
      - name: Prepare ccache
        id: prepare_ccache
        run: |
          echo "timestamp=$(TZ=UTC date "+%Y-%m-%d-T%H:%M:%S")" >> $GITHUB_OUTPUT
          echo "CCACHE_DIR=$GITHUB_WORKSPACE/.ccache" >> $GITHUB_ENV
      - name: Set up ccache
        uses: actions/cache@v4
        with:
          path: .ccache
          key: ccache-${{ github.job }}-${{ steps.prepare_ccache.outputs.timestamp }}
          restore-keys: ccache-${{ github.job }}-
      - name: CMake release config
        run: >-
          cmake -S llvm -B "$BUILD_DIR" -G Ninja
          -DCMAKE_C_COMPILER=clang-14 -DCMAKE_CXX_COMPILER=clang++-14
          -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
          -DLLVM_EXTERNAL_PROJECT_PASSTHROUGH="CMAKE_C_COMPILER_LAUNCHER;CMAKE_CXX_COMPILER_LAUNCHER"
          -C .syntacore/release.cmake
      - name: CMake release build
        run: cmake --build "$BUILD_DIR" --target llvm-snippy llvm-ie docs-llvm-snippy-man docs-llvm-snippy-latex docs-llvm-snippy-html
      - name: CMake release test
        run: env CTEST_OUTPUT_ON_FAILURE=1 cmake --build "$BUILD_DIR" --target check-llvm-tools-llvm-snippy
      - name: CMake install
        id: install_release
        run: |
          release_os="${RUNNER_OS@L}" # Lowercase OS (linux)
          release_arch="$(uname -m)" # Arch (x86_64, aarch64)
          release_basename="snippy-$release_arch-$release_os"
          release_tarball_filename="$release_basename.tar.xz" # snippy-x86_64-linux.tar.xz
          echo "release_basename=$release_basename" >> $GITHUB_OUTPUT
          echo "release_tarball_filename=$release_tarball_filename" >> $GITHUB_OUTPUT

          for component in llvm-snippy llvm-snippy-man-pages; do
            cmake --install "$BUILD_DIR" --prefix "$INSTALL_DIR" --component "$component"
          done

          tar --xz -C "$INSTALL_DIR" -cvf "$release_tarball_filename" .
      - name: Upload binary install artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.install_release.outputs.release_basename }}
          path: ${{ steps.install_release.outputs.release_tarball_filename }}
          compression-level: 0 # Artifact is already compressed
      - name: Upload html docs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: snippy-doc-html
          path: ${{ env.BUILD_DIR }}/tools/llvm-snippy/docs/html
      - name: Upload latex docs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: snippy-doc-latex
          path: ${{ env.BUILD_DIR }}/tools/llvm-snippy/docs/latex
      - name: Upload github pages artifact
        if: github.event_name == 'push' && github.ref_name == 'main' && github.repository_owner == 'syntacore'
        uses: actions/upload-pages-artifact@7b1f4a764d45c48632c6b24a0339c27f5614fb0b # v4.0.0
        with:
          path: ${{ env.BUILD_DIR }}/tools/llvm-snippy/docs/html
      - name: Show ccache statistics
        run: |
          ccache -s
          ccache -z
  deploy-pages:
    needs: [main]
    if: github.event_name == 'push' && github.ref_name == 'main' && github.repository_owner == 'syntacore'
    runs-on: ubuntu-24.04
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    concurrency:
      group: github-pages
      cancel-in-progress: false
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e # v4.0.5
